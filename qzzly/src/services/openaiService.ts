// openaiService.ts (stub for compatibility)
import { FileItem, QuizQuestion } from '../types/session';

export const generateQuiz = async (
  prompt: string,
  questionCount: number,
  difficulty: string,
  topic: string,
  showExplanations: boolean,
  questionTypes: string[],
  files: FileItem[],
  sessionId: string
): Promise<{ questions: QuizQuestion[]; title: string }> => {
  // Return mock quiz data
  return {
    title: topic || 'Mock Quiz',
    questions: Array.from({ length: questionCount }, (_, i) => ({
      question: `Mock question ${i + 1}?`,
      options: ['A', 'B', 'C', 'D'],
      answer: 'A',
    })),
  };
};

export const generateStudyMaterial = async (files: FileItem[]): Promise<string> => {
  return Promise.resolve('This is a mock study material generated by OpenAI.');
};

export const generateLongAnswer = async (files: FileItem[], question: string): Promise<string> => {
  return Promise.resolve(`This is a mock long answer for: ${question}`);
};

export const generateFlashcards = async (files: FileItem[]): Promise<{ front: string; back: string; mastered: boolean }[]> => {
  // Return mock flashcards
  return [
    { front: 'Mock Term 1', back: 'Mock Definition 1', mastered: false },
    { front: 'Mock Term 2', back: 'Mock Definition 2', mastered: false },
  ];
}; 